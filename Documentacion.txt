/* D o c u m e n t a c i ó n   d e l   S o f t w a r e */


/* C o n v e n c i ó n   d e   c a c h e s */

   Todas las entidades tendrán cacheadas (de manera muy prolongada en el tiempo) sus elementos asociados como por ejemplo las imagenes,categorías, etc.
   El fin es separar del modelo la funciones de traer los datos y consultarlos a través de un servicio. 
   Por ende cada vez que se actualice una imagen se deberá borrar el cache asociado a esa entidad. 
   Luego se actualizará el cache de forma automática con la función Cache::remember().
   Importante ver los nombres de estos Cache remeber para luego poder olvidarlos.


/* P a r a   e l   c a s o   d e l   p a n e l   a d m i n   l o s   n o m b r e s   d e   l a s   v a r i a b l e s   q u e   
   c o n t e n g a n   E n t i d a d e s   y   E n t i d a d   d e   l o s   C R U D   s e r á  */

   $Entidades
   $Entidad

/* V e r  e l   C R U D   d e  a c t i v i d a d e s   c o m o   b a s e   p a r a   c r e a r   u n   C R U D   n u e v o  */

   - Se inician las variables y la forma de los crud será similares.

   - Solo hay que editar las partes de set_creat y ser_editar.

   - Se da por entendido que van a usar imágenes por ende se inicia el repo de imágenes.

   - Manager y podpiedades se cambia valor en dichas funciones getManager() y getPropiedades().

   - Se debe crear una carpeta con las vistas en la carpete de views/admin. El nombre debe ser el que se establece en el controller. 

   - Tener en cuenta crear carpeta de imagenes en la carpeta pública en el controller sería la variable $this->Path_carpeta_imagenes.

   - La variable de la entidad protected $img_key establece el nombre por el cual se buscará las imagenes, esto se debe ajustar en el controller en la parte de $this->Nombre_del_campo_imagen

   - En la carpeta pública el nombre de la carpet ver en el controller antes de crear. 

   - Los tours, turismo rural y actividades al aire libre son la misma entidad pero desde la vista de crear se pasa la propiedad "tipo_de_tour". Se crea cómo módulos diferentes para que los administradores tengan mejor interfáz.






/* L e n g u a j e s */

   - La lógica de lenguaje se hace en el middelware App\HTTP\Middelware\Lenguaje. 

   - Lo idiomas disponibles están en un array en App\config\lenguajes

   - Las entidades que tiene atributes a traducir tendrán multimples atributos para cada idioma. Ejemplo: si tiene una propiedad de nombre 'name' esa propiedad en ingles sería 'nameEN'. Estás nuevas propiedades hay que crearlas en la base de datos a medida que se agreguen nuevos idiomas. 

   - Cuando se agrega un idioma se debe ajustar agregar en los controllers de las entidades las nuevas propiedades para ese idioma. Se agregan en la función getPropiedades(); 

   - Para la lógica de como se muestran las propiedades de las entidades se creó un Trait en App\Traits\entidadesMetodosLenguajeAttributes. Este Trait se debe implementar en el modelo de las entidades (App/Entidades) y se debe crear las prpeidades mutadas correspondientes. Ver la Entidad tour y el código explicará mejor.  